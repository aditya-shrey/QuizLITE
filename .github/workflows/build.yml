name: QuizLITE Automated Tests

on: [push, pull_request]

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install CMake
        run: |
          $url = 'https://github.com/Kitware/CMake/releases/download/v3.26.0/cmake-3.26.0-windows-x86_64.msi'
          $output = 'cmake.msi'
          Invoke-WebRequest -Uri $url -OutFile $output
          Start-Process msiexec.exe -Wait -ArgumentList '/i', $output, '/quiet', '/norestart'
          echo "C:\Program Files\CMake\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install vcpkg and dependencies
        run: |
          git clone https://github.com/microsoft/vcpkg
          .\vcpkg\bootstrap-vcpkg.bat
          .\vcpkg\vcpkg install sqlite3:x64-windows gtest:x64-windows

      - name: List installed vcpkg packages
        run: .\vcpkg\vcpkg list

      - name: Set up Visual Studio Environment
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake"

      - name: Build
        run: cmake --build build

      - name: Test
        run: .\build\Debug\tests.exe

      - name: Clear CMake Cache
        run: Remove-Item -Path build -Recurse -Force

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ libsqlite3-dev libgtest-dev
          sudo apt-get install -y cmake libgtest-dev
          cd /usr/src/gtest
          sudo cmake CMakeLists.txt
          sudo make
          sudo cp *.a /usr/lib

      - name: Configure CMake
        run: cmake -S . -B build

      - name: Build
        run: cmake --build build

      - name: Run Tests
        run: |
          cd build
          ctest

  build-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          brew update
          brew install cmake sqlite3
          brew install googletest

      - name: Configure CMake
        run: cmake -S . -B build

      - name: Build
        run: cmake --build build

      - name: Run Tests
        run: |
          cd build
          ctest

  linter:
    name: Linter
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Clone repository
        uses: actions/checkout@master
      - name: Run linter
        uses: DoozyX/clang-format-lint-action@v0.8
        with:
          source: 'Database User tests'
          extensions: 'cpp,h'
          style: webkit
